{"version":3,"file":"static/js/802.d2b98a2b.chunk.js","mappings":"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","sources":["../node_modules/@babel/standalone|sync","metadata.ts","@production/index.js","Preview.tsx","components/Popup.tsx","files.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5380;\nmodule.exports = webpackEmptyContext;","export const duration = 100.86;\nexport const fps = 30;\nexport const durationInFrames = Math.ceil(duration * fps);","import \"../codebooth.css\";\nimport \"../style.css\";\nimport \"../syntax.css\";\n\nimport {javascript} from \"@codemirror/lang-javascript\";\nimport {syntaxHighlighting} from \"@codemirror/language\";\nimport {classHighlighter} from \"@lezer/highlight\";\nimport {basicSetup, Buttons, Clear, CodeBooth, Copy, Editor, EditorGroup, EditorPanel, Replay, Resize, Run, Tab, TabList} from \"@lqv/codebooth\";\nimport {Bridge} from \"@lqv/remotion\";\nimport {Player} from \"@remotion/player\";\nimport {Audio} from \"remotion\";\n\nimport {Popup} from \"../components/Popup\";\nimport {file} from \"../files\";\nimport {duration, fps} from \"../metadata\";\nimport {Preview} from \"../Preview\";\n\nconst recordingData = fetch(\"./recordings.json\").then(res => res.json());\n\nconst extensions = [\n  basicSetup,\n  javascript({jsx: true, typescript: true}),\n  syntaxHighlighting(classHighlighter)\n];\n\nfunction App() {\n  return (\n    <Player\n      clickToPlay={false}\n      component={Content}\n      durationInFrames={Math.ceil(fps * duration)}\n      compositionWidth={window.innerWidth}\n      compositionHeight={window.innerHeight}\n      fps={fps}\n      style={{\n        width: \"100%\"\n      }}\n      controls\n    />\n  );\n}\n\nexport default App;\n\nfunction Content() {\n  return (\n    <Bridge>\n      <Audio src=\"audio.mp4\" />\n      <CodeBooth>\n        <section className=\"lqv-sidebar\">\n          <h2>View</h2>\n          <TabList className=\"lqv-group-tabs\">\n            <Tab id=\"replay\">Replay</Tab>\n            <Tab id=\"playground\">Playground</Tab>\n          </TabList>\n\n          <h2>Code</h2>\n          <Buttons>\n            <Run />\n            <Copy from=\"replay\" to=\"playground\" />\n            <Clear />\n          </Buttons>\n        </section>\n\n        <EditorGroup id=\"replay\">\n          <EditorPanel filename=\"index.tsx\">\n            <Replay\n            content={file}\n              extensions={extensions}\n              replay={recordingData}\n            />\n          </EditorPanel>\n        </EditorGroup>\n        <EditorGroup id=\"playground\">\n          <EditorPanel filename=\"index.tsx\">\n            <Editor\n              extensions={extensions}\n            />\n          </EditorPanel>\n        </EditorGroup>\n\n        <Resize min={.1} max={.3} />\n        <Popup title=\"Preview\">\n          <Preview />\n        </Popup>\n      </CodeBooth>\n    </Bridge >\n  );\n}\n","import * as Babel from \"@babel/standalone\";\nimport {State, useBoothStore} from \"@lqv/codebooth\";\nimport {useEffect, useRef} from \"react\";\nimport {htmlTemplate, tsxTemplate} from \"./files\";\n\ndeclare global {\n  interface Window {\n    __Component: JSX.Element;\n  }\n}\n\n/**\n * Preview of TSX document.\n */\nexport function Preview() {\n  /* this is largely taken from HTMLPreview in @lqv/codebooth/html */\n  const store = useBoothStore();\n\n  /** <iframe> containing preview document */\n  const iframe = useRef<HTMLIFrameElement>();\n\n  /* rendering */\n  useEffect(() => {\n    /* re-render */\n    function render() {\n      const files = getFileContents(store.getState());\n      if (!(\"index.tsx\" in files)) {\n        return;\n      }\n      const tsx = tsxTemplate(files[\"index.tsx\"]);\n\n      // babel transform\n      const opts: any = {\n        filename: \"index.tsx\",\n        plugins: [\n          [\"transform-modules-umd\", {\n            \"globals\": {\n              \"react\": \"React\",\n              \"react-dom\": \"ReactDOM\"\n            }\n          }]\n        ],\n        presets: [\"env\", \"react\", \"typescript\"]\n      };\n      try {\n        const {code} = Babel.transform(tsx, opts);\n        console.log(code);\n        iframe.current.srcdoc = htmlTemplate(code);\n      } catch (e) {\n\n      }\n    }\n\n    // initial render\n    render();\n    // subscribe to run event\n\n    return store.subscribe((state) => state.run, render);\n  }, [store]);\n\n  return (\n    <iframe\n      className=\"lqv-preview\"\n      ref={iframe}\n      sandbox=\"allow-popups allow-scripts\"\n      title=\"TSX Preview\"\n    />\n  );\n}\n\n/**\n * Get record of filenames to file contents.\n * @param state Booth state.\n */\nfunction getFileContents(state: State): Record<string, string> {\n  const ret: Record<string, string> = {};\n  if (!state.groups[state.activeGroup]) return ret;\n  const {files} = state.groups[state.activeGroup];\n  for (const file of files) {\n    ret[file.filename] = file.view.state.doc.toString();\n  }\n  return ret;\n}\n","import {useMemo, useRef} from \"react\";\nimport {clamp} from \"@liqvid/utils/misc\";\nimport {onDrag} from \"@liqvid/utils/react\";\nimport \"./Popup.css\";\n\ntype DragDir = \"s\" | \"e\" | \"se\";\n\nexport function Popup(props: {\n  children?: React.ReactNode;\n\n  title?: string;\n}) {\n  const dragDir = useRef<DragDir>();\n  const ref = useRef<HTMLElement>();\n  const offset = useRef({x: 0, y: 0});\n\n  const dragEvents = useMemo(\n    () =>\n      onDrag(\n        (e, hit) => {\n          // prevent from dragging off the page\n          const left =\n            clamp(\n              0,\n              hit.x - offset.current.x,\n              window.innerWidth - ref.current.offsetWidth\n            ) / window.innerWidth;\n\n          const top =\n            clamp(\n              0,\n              hit.y - offset.current.y,\n              window.innerHeight - ref.current.offsetHeight\n            ) / window.innerHeight;\n\n          Object.assign(ref.current.style, {\n            left: `${left * 100}%`,\n            top: `${top * 100}%`\n          });\n        },\n        // down\n        (e, hit) => {\n          e.preventDefault();\n          const dims = ref.current.getBoundingClientRect();\n          offset.current.x = hit.x - dims.left;\n          offset.current.y = hit.y - dims.top;\n\n          document.body.classList.add(\"dragging\");\n        },\n        () => document.body.classList.remove(\"dragging\")\n      ),\n    []\n  );\n\n  const resizeEvents = useMemo(\n    () =>\n      onDrag(\n        (e, {dx, dy}) => {\n          e.preventDefault();\n          const rect = ref.current.getBoundingClientRect();\n\n          let {height, width} = rect;\n\n          // console.log(dx, width);\n\n          if (dragDir.current.includes(\"e\")) width += dx;\n          if (dragDir.current.includes(\"s\")) height += dy;\n\n          Object.assign(ref.current.style, {\n            height: `${height}px`,\n            width: `${width}px`\n          });\n        },\n        (e) => {\n          dragDir.current = (e.target as HTMLDivElement).className.match(\n            /ui-resizable-([se]+)/\n          )[1] as DragDir;\n          \n          document.body.classList.add(\"resizing\");\n        },\n        () => document.body.classList.remove(\"resizing\")\n      ),\n    []\n  );\n\n  return (\n    <aside className=\"popup\" ref={ref}>\n      {props.title && (\n        <header className=\"draggable\" {...dragEvents}>\n          {props.title}\n        </header>\n      )}\n      <div className=\"ui-resizable-handle ui-resizable-e\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-s\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-se\" {...resizeEvents} />\n      <div className=\"popup-content\">{props.children}</div>\n    </aside>\n  );\n}\n","function templateString(strings, ...keys) {\n  return (...values: string[]): string => {\n    const result = [strings[0]];\n    keys.forEach((key, i) => {\n      result.push(values[key], strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}\n\nexport const file = `function Component() {\n  return <h1>Hello World!</h1>;\n}\n`;\n\nexport const tsxTemplate = templateString`const {createRoot} = ReactDOM;\n\n${0}\n\ncreateRoot(document.querySelector(\"main\")).render(<Component />)`;\n\nexport const htmlTemplate = templateString`<html>\n<body>\n  <main></main>\n  \n  <script crossorigin defer src=\"https://unpkg.com/react@18.2.0/umd/react.production.min.js\"></script>\n  <script crossorigin defer src=\"https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js\"></script>\n  <script defer>window.addEventListener(\"DOMContentLoaded\", () => {${0}});</script>\n</body>\n</html>`;\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Math","ceil","duration","recordingData","fetch","then","res","json","extensions","basicSetup","javascript","jsx","typescript","syntaxHighlighting","classHighlighter","clickToPlay","component","Content","durationInFrames","fps","compositionWidth","window","innerWidth","compositionHeight","innerHeight","style","width","controls","Audio","src","className","from","to","EditorGroup","EditorPanel","filename","Replay","content","file","replay","Editor","Resize","min","max","Popup","title","Preview","store","useBoothStore","iframe","useRef","useEffect","render","files","state","ret","groups","activeGroup","view","doc","toString","getFileContents","getState","tsx","tsxTemplate","Babel","plugins","presets","console","log","current","srcdoc","htmlTemplate","subscribe","run","ref","sandbox","props","dragDir","offset","x","y","dragEvents","useMemo","onDrag","hit","left","clamp","offsetWidth","top","offsetHeight","Object","assign","preventDefault","dims","getBoundingClientRect","document","body","classList","add","remove","resizeEvents","dx","dy","rect","height","includes","target","match","children","templateString","strings","values","result","forEach","key","i","push","join"],"sourceRoot":""}