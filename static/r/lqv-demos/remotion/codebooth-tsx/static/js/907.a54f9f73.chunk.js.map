{"version":3,"file":"static/js/907.a54f9f73.chunk.js","mappings":"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","sources":["../node_modules/@babel/standalone|sync","@development/Record.tsx","@development/index.js","Preview.tsx","components/Popup.tsx","files.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5380;\nmodule.exports = webpackEmptyContext;","import {AudioRecorder, RecordingManager} from \"@liqvid/recording\";\nimport {length} from \"@liqvid/utils/replay-data\";\nimport {CodeRecorder} from \"@lqv/codemirror/recording\";\nimport {useCallback, useEffect, useState} from \"react\";\n\ntype CodingData = ReturnType<CodeRecorder[\"finalizeRecording\"]>;\ntype RecordingData = {\n  audio: Blob;\n  coding: CodingData;\n};\n\nconst manager = new RecordingManager();\nconst audioRecorder = new AudioRecorder();\naudioRecorder.requestRecording();\nexport const codeRecorder = new CodeRecorder();\n\nexport function RecordingControl() {\n  const [active, setActive] = useState(false);\n  const [data, setData] = useState<RecordingData>();\n\n  /* prevent CRA reload when recording */\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    const warn = (e: BeforeUnloadEvent) => e.returnValue = \"You have recording data\";\n    window.addEventListener(\"beforeunload\", warn);\n    return () => window.removeEventListener(\"beforeunload\", warn);\n  }, [data]);\n\n  const toggleRecording = useCallback(() => {\n    if (active) {\n      (manager.endRecording() as Promise<RecordingData>).then(\n        (recordingData) => {\n          setData(recordingData);\n        }\n      );\n    } else {\n      manager.beginRecording({\n        audio: audioRecorder,\n        coding: codeRecorder\n      });\n    }\n    setActive(!active);\n  }, [active]);\n\n  return (\n    <div className=\"lqv-recording\">\n      <h2>Recording</h2>\n      <button aria-pressed={active} onClick={toggleRecording}>\n        <svg aria-hidden=\"true\" viewBox=\"-2 -2 4 4\">\n          <circle fill={active ? \"red\" : \"#aaa\"} cx=\"0\" cy=\"0\" r=\"1\" />\n        </svg>\n        Record\n      </button>\n      {data && (\n        <output>\n          <p>\n            Duration: <code>{length(data.coding) / 1000}</code>\n          </p>\n          <p>\n            Save this as <code>public/audio.webm</code>:\n            <a download=\"audio.webm\" href={URL.createObjectURL(data.audio)}>\n              Download Audio\n            </a>\n          </p>\n          <p>\n            Copy this into <code>public/recordings.json</code>:\n          </p>\n          <textarea readOnly value={JSON.stringify(data.coding)} />\n        </output>\n      )}\n    </div>\n  );\n}\n","import \"../codebooth.css\";\nimport \"../style.css\";\nimport \"../syntax.css\";\n\nimport {javascript} from \"@codemirror/lang-javascript\";\nimport {syntaxHighlighting} from \"@codemirror/language\";\nimport {classHighlighter} from \"@lezer/highlight\";\nimport {basicSetup, Buttons, Clear, CodeBooth, EditorPanel, Record, Resize, Run} from \"@lqv/codebooth\";\nimport {Popup} from \"../components/Popup\";\nimport {file} from \"../files\";\nimport {Preview} from \"../Preview\";\nimport {codeRecorder, RecordingControl} from \"./Record\";\n\nconst extensions = [\n  basicSetup,\n  javascript({jsx: true, typescript: true}),\n  syntaxHighlighting(classHighlighter)\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CodeBooth recorder={codeRecorder}>\n        <section className=\"lqv-sidebar\">\n          <h2>Code</h2>\n          <Buttons>\n            <Run />\n            <Clear />\n          </Buttons>\n          <RecordingControl />\n        </section>\n        <EditorPanel filename=\"index.tsx\">\n          <Record\n            content={file}\n            extensions={extensions}\n          />\n        </EditorPanel>\n        <Resize min={.1} max={.3} />\n        <Popup title=\"Preview\">\n          <Preview />\n        </Popup>\n      </CodeBooth>\n    </div>\n  );\n}\n\nexport default App;\n","import * as Babel from \"@babel/standalone\";\nimport {State, useBoothStore} from \"@lqv/codebooth\";\nimport {useEffect, useRef} from \"react\";\nimport {htmlTemplate, tsxTemplate} from \"./files\";\n\ndeclare global {\n  interface Window {\n    __Component: JSX.Element;\n  }\n}\n\n/**\n * Preview of TSX document.\n */\nexport function Preview() {\n  /* this is largely taken from HTMLPreview in @lqv/codebooth/html */\n  const store = useBoothStore();\n\n  /** <iframe> containing preview document */\n  const iframe = useRef<HTMLIFrameElement>();\n\n  /* rendering */\n  useEffect(() => {\n    /* re-render */\n    function render() {\n      const files = getFileContents(store.getState());\n      if (!(\"index.tsx\" in files)) {\n        return;\n      }\n      const tsx = tsxTemplate(files[\"index.tsx\"]);\n\n      // babel transform\n      const opts: any = {\n        filename: \"index.tsx\",\n        plugins: [\n          [\"transform-modules-umd\", {\n            \"globals\": {\n              \"react\": \"React\",\n              \"react-dom\": \"ReactDOM\"\n            }\n          }]\n        ],\n        presets: [\"env\", \"react\", \"typescript\"]\n      };\n      try {\n        const {code} = Babel.transform(tsx, opts);\n        console.log(code);\n        iframe.current.srcdoc = htmlTemplate(code);\n      } catch (e) {\n\n      }\n    }\n\n    // initial render\n    render();\n    // subscribe to run event\n\n    return store.subscribe((state) => state.run, render);\n  }, [store]);\n\n  return (\n    <iframe\n      className=\"lqv-preview\"\n      ref={iframe}\n      sandbox=\"allow-popups allow-scripts\"\n      title=\"TSX Preview\"\n    />\n  );\n}\n\n/**\n * Get record of filenames to file contents.\n * @param state Booth state.\n */\nfunction getFileContents(state: State): Record<string, string> {\n  const ret: Record<string, string> = {};\n  if (!state.groups[state.activeGroup]) return ret;\n  const {files} = state.groups[state.activeGroup];\n  for (const file of files) {\n    ret[file.filename] = file.view.state.doc.toString();\n  }\n  return ret;\n}\n","import {useMemo, useRef} from \"react\";\nimport {clamp} from \"@liqvid/utils/misc\";\nimport {onDrag} from \"@liqvid/utils/react\";\nimport \"./Popup.css\";\n\ntype DragDir = \"s\" | \"e\" | \"se\";\n\nexport function Popup(props: {\n  children?: React.ReactNode;\n\n  title?: string;\n}) {\n  const dragDir = useRef<DragDir>();\n  const ref = useRef<HTMLElement>();\n  const offset = useRef({x: 0, y: 0});\n\n  const dragEvents = useMemo(\n    () =>\n      onDrag(\n        (e, hit) => {\n          // prevent from dragging off the page\n          const left =\n            clamp(\n              0,\n              hit.x - offset.current.x,\n              window.innerWidth - ref.current.offsetWidth\n            ) / window.innerWidth;\n\n          const top =\n            clamp(\n              0,\n              hit.y - offset.current.y,\n              window.innerHeight - ref.current.offsetHeight\n            ) / window.innerHeight;\n\n          Object.assign(ref.current.style, {\n            left: `${left * 100}%`,\n            top: `${top * 100}%`\n          });\n        },\n        // down\n        (e, hit) => {\n          e.preventDefault();\n          const dims = ref.current.getBoundingClientRect();\n          offset.current.x = hit.x - dims.left;\n          offset.current.y = hit.y - dims.top;\n\n          document.body.classList.add(\"dragging\");\n        },\n        () => document.body.classList.remove(\"dragging\")\n      ),\n    []\n  );\n\n  const resizeEvents = useMemo(\n    () =>\n      onDrag(\n        (e, {dx, dy}) => {\n          e.preventDefault();\n          const rect = ref.current.getBoundingClientRect();\n\n          let {height, width} = rect;\n\n          // console.log(dx, width);\n\n          if (dragDir.current.includes(\"e\")) width += dx;\n          if (dragDir.current.includes(\"s\")) height += dy;\n\n          Object.assign(ref.current.style, {\n            height: `${height}px`,\n            width: `${width}px`\n          });\n        },\n        (e) => {\n          dragDir.current = (e.target as HTMLDivElement).className.match(\n            /ui-resizable-([se]+)/\n          )[1] as DragDir;\n          \n          document.body.classList.add(\"resizing\");\n        },\n        () => document.body.classList.remove(\"resizing\")\n      ),\n    []\n  );\n\n  return (\n    <aside className=\"popup\" ref={ref}>\n      {props.title && (\n        <header className=\"draggable\" {...dragEvents}>\n          {props.title}\n        </header>\n      )}\n      <div className=\"ui-resizable-handle ui-resizable-e\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-s\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-se\" {...resizeEvents} />\n      <div className=\"popup-content\">{props.children}</div>\n    </aside>\n  );\n}\n","function templateString(strings, ...keys) {\n  return (...values: string[]): string => {\n    const result = [strings[0]];\n    keys.forEach((key, i) => {\n      result.push(values[key], strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}\n\nexport const file = `function Component() {\n  return <h1>Hello World!</h1>;\n}\n`;\n\nexport const tsxTemplate = templateString`const {createRoot} = ReactDOM;\n\n${0}\n\ncreateRoot(document.querySelector(\"main\")).render(<Component />)`;\n\nexport const htmlTemplate = templateString`<html>\n<body>\n  <main></main>\n  \n  <script crossorigin defer src=\"https://unpkg.com/react@18.2.0/umd/react.production.min.js\"></script>\n  <script crossorigin defer src=\"https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js\"></script>\n  <script defer>window.addEventListener(\"DOMContentLoaded\", () => {${0}});</script>\n</body>\n</html>`;\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","manager","RecordingManager","audioRecorder","AudioRecorder","requestRecording","codeRecorder","CodeRecorder","RecordingControl","useState","active","setActive","data","setData","useEffect","warn","returnValue","window","addEventListener","removeEventListener","toggleRecording","useCallback","endRecording","then","recordingData","beginRecording","audio","coding","className","onClick","viewBox","fill","cx","cy","r","length","download","href","URL","createObjectURL","readOnly","value","JSON","stringify","extensions","basicSetup","javascript","jsx","typescript","syntaxHighlighting","classHighlighter","recorder","EditorPanel","filename","Record","content","file","Resize","min","max","Popup","title","Preview","store","useBoothStore","iframe","useRef","render","files","state","ret","groups","activeGroup","view","doc","toString","getFileContents","getState","tsx","tsxTemplate","Babel","plugins","presets","console","log","current","srcdoc","htmlTemplate","subscribe","run","ref","sandbox","props","dragDir","offset","x","y","dragEvents","useMemo","onDrag","hit","left","clamp","innerWidth","offsetWidth","top","innerHeight","offsetHeight","Object","assign","style","preventDefault","dims","getBoundingClientRect","document","body","classList","add","remove","resizeEvents","dx","dy","rect","height","width","includes","target","match","children","templateString","strings","values","result","forEach","key","i","push","join"],"sourceRoot":""}