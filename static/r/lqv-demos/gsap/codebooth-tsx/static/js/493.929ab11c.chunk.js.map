{"version":3,"file":"static/js/493.929ab11c.chunk.js","mappings":"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","sources":["../node_modules/@babel/standalone|sync","@production/Audio.tsx","@production/ScrubberBar.tsx","@production/index.js","metadata.ts","Preview.tsx","components/Popup.tsx","files.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5380;\nmodule.exports = webpackEmptyContext;","import {useME} from \"@lqv/playback/react\";\nimport {useEffect, useRef} from \"react\";\n\n/**\n * <audio> element synced with MediaElement.\n */\nexport function Audio(props: React.PropsWithChildren<React.AudioHTMLAttributes<HTMLAudioElement>>): JSX.Element {\n  const audio = useRef<HTMLAudioElement>();\n  const playback = useME();\n\n  useEffect(() => {\n    function play() {\n      audio.current?.play();\n    }\n\n    function pause() {\n      audio.current?.pause();\n    }\n\n    function syncTime() {\n      (audio.current as HTMLAudioElement).currentTime = playback.currentTime;\n    }\n\n    playback.addEventListener(\"pause\", pause);\n    playback.addEventListener(\"play\", play);\n    playback.addEventListener(\"seeking\", syncTime);\n\n    return () => {\n      playback.removeEventListener(\"pause\", pause);\n      playback.removeEventListener(\"play\", play);\n      playback.removeEventListener(\"seeking\", syncTime);\n    }\n  }, []);\n\n  return <audio ref={audio} {...props}/>;\n}","import \"./ScrubberBar.css\";\n\nimport {useForceUpdate} from \"@liqvid/utils/react\";\nimport {useME} from \"@lqv/playback/react\";\nimport {useCallback, useEffect, useMemo, useRef} from \"react\";\n\nexport function ScrubberBar(): JSX.Element {\n  const playback = useME();\n  const input = useRef<HTMLInputElement>(null);\n  const forceUpdate = useForceUpdate();\n\n  // synchronize\n  useEffect(() => {\n    playback.addEventListener(\"timeupdate\", forceUpdate);\n\n    return () => {\n      playback.removeEventListener(\"timeupdate\", forceUpdate);\n    };\n  }, [playback]);\n\n  // update\n  const onChange = useCallback((e) => {\n    playback.currentTime = parseFloat(e.currentTarget.value);\n  }, [playback]);\n\n  // fullscreen\n  const toggleFullscreen = useCallback(() => {\n    if (document.fullscreenElement) {\n      document.exitFullscreen();\n    } else {\n      document.body.requestFullscreen();\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"fullscreenchange\", forceUpdate);\n\n    return () => {\n      document.removeEventListener(\"fullscreenchange\", forceUpdate);\n    }\n  }, []);\n\n  /** Play timeline. */\n  const play = useMemo(() => playback.play.bind(playback), [playback]);\n\n  /** Pause timeline. */\n  const pause = useMemo(() => playback.pause.bind(playback), [playback]);\n\n  return (\n    <div id=\"scrubber\">\n      <button aria-label=\"Play\" title=\"Play\" onClick={play}>▶</button>\n      <button aria-label=\"Pause\" title=\"Pause\" onClick={pause}>⏸</button>\n      <input\n        onChange={onChange} ref={input}\n        type=\"range\" min=\"0\" max={playback.duration} step=\"any\" value={playback.currentTime} />\n      <button\n        aria-label=\"Fullscreen\"\n        title={document.fullscreenElement ? \"Exit full screen\" : \"Full screen\"}\n        onClick={toggleFullscreen}\n      >{document.fullscreenElement ? unFullscreenIcon : fullscreenIcon}</button>\n    </div>\n  );\n}\n\nconst fullscreenIcon = <svg viewBox=\"0 0 36 36\"><path fill=\"black\" d=\"M 10 16 h 2 v -4 h 4 v -2 h -6 v 6 z\"></path><path fill=\"black\" d=\"M 20 10 v 2 h 4 v 4 h 2 v -6 h -6 z\"></path><path fill=\"black\" d=\"M 24 24 h -4 v 2 h 6 v -6 h -2 v 4 z\"></path><path fill=\"black\" d=\"M 12 20 h -2 v 6 h 6 v -2 h -4 v -4 z\"></path></svg>;\nconst unFullscreenIcon = <svg viewBox=\"0 0 36 36\"><path fill=\"black\" d=\"M 14 14 h -4 v 2 h 6 v -6 h -2 v 4 z\"></path><path fill=\"black\" d=\"M 22 14 v -4 h -2 v 6 h 6 v -2 h -4 z\"></path><path fill=\"black\" d=\"M 20 26 h 2 v -4 h 4 v -2 h -6 v 6 z\"></path><path fill=\"black\" d=\"M 10 22 h 4 v 4 h 2 v -6 h -6 v 2 z\"></path></svg>;\n","import \"../codebooth.css\";\nimport \"../style.css\";\nimport \"../syntax.css\";\n\nimport {javascript} from \"@codemirror/lang-javascript\";\nimport {syntaxHighlighting} from \"@codemirror/language\";\nimport {classHighlighter} from \"@lezer/highlight\";\nimport {basicSetup, Buttons, Clear, CodeBooth, Console, Copy, Editor, EditorGroup, EditorPanel, Replay, Resize, Run, Tab, TabList} from \"@lqv/codebooth\";\nimport {Bridge} from \"@lqv/gsap\";\nimport {gsap} from \"gsap\";\n\nimport {Popup} from \"../components/Popup\";\nimport {file} from \"../files\";\nimport {duration} from \"../metadata\";\nimport {Preview} from \"../Preview\";\nimport {Audio} from \"./Audio\";\nimport {ScrubberBar} from \"./ScrubberBar\";\n\nconst tl = gsap.timeline({duration, paused: true});\nconst recordingData = fetch(\"./recordings.json\").then(res => res.json());\n\nconst extensions = [\n  basicSetup,\n  javascript({jsx: true, typescript: true}),\n  syntaxHighlighting(classHighlighter)\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Bridge timeline={tl}>\n        <Content />\n        <ScrubberBar timeline={tl} />\n      </Bridge>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction Content() {\n  return (\n    <>\n      <Audio src=\"./audio.mp4\" />\n      <CodeBooth>\n        <section className=\"lqv-sidebar\">\n          <h2>View</h2>\n          <TabList className=\"lqv-group-tabs\">\n            <Tab id=\"replay\">Replay</Tab>\n            <Tab id=\"playground\">Playground</Tab>\n          </TabList>\n\n          <h2>Code</h2>\n          <Buttons>\n            <Run />\n            <Copy from=\"replay\" to=\"playground\" />\n            <Clear />\n          </Buttons>\n        </section>\n\n\n        <EditorGroup id=\"replay\">\n          <EditorPanel filename=\"index.tsx\">\n            <Replay\n            content={file}\n              extensions={extensions}\n              replay={recordingData}\n            />\n          </EditorPanel>\n        </EditorGroup>\n        <EditorGroup id=\"playground\">\n          <EditorPanel filename=\"index.tsx\">\n            <Editor\n              extensions={extensions}\n            />\n          </EditorPanel>\n        </EditorGroup>\n\n        <Resize min={.1} max={.3} />\n        <Popup title=\"Preview\">\n          <Preview />\n        </Popup>\n        <Console />\n      </CodeBooth>\n    </>\n  );\n}\n","export const duration = 100.86;\n","import * as Babel from \"@babel/standalone\";\nimport {State, useBoothStore} from \"@lqv/codebooth\";\nimport {useEffect, useRef} from \"react\";\nimport {htmlTemplate, tsxTemplate} from \"./files\";\n\ndeclare global {\n  interface Window {\n    __Component: JSX.Element;\n  }\n}\n\n/**\n * Preview of TSX document.\n */\nexport function Preview() {\n  /* this is largely taken from HTMLPreview in @lqv/codebooth/html */\n  const store = useBoothStore();\n\n  /** <iframe> containing preview document */\n  const iframe = useRef<HTMLIFrameElement>();\n\n  /* rendering */\n  useEffect(() => {\n    /* re-render */\n    function render() {\n      const files = getFileContents(store.getState());\n      if (!(\"index.tsx\" in files)) {\n        return;\n      }\n      const tsx = tsxTemplate(files[\"index.tsx\"]);\n\n      // babel transform\n      const opts: any = {\n        filename: \"index.tsx\",\n        plugins: [\n          [\"transform-modules-umd\", {\n            \"globals\": {\n              \"react\": \"React\",\n              \"react-dom\": \"ReactDOM\"\n            }\n          }]\n        ],\n        presets: [\"env\", \"react\", \"typescript\"]\n      };\n      try {\n        const {code} = Babel.transform(tsx, opts);\n        console.log(code);\n        iframe.current.srcdoc = htmlTemplate(code);\n      } catch (e) {\n\n      }\n    }\n\n    // initial render\n    render();\n    // subscribe to run event\n\n    return store.subscribe((state) => state.run, render);\n  }, [store]);\n\n  return (\n    <iframe\n      className=\"lqv-preview\"\n      ref={iframe}\n      sandbox=\"allow-popups allow-scripts\"\n      title=\"TSX Preview\"\n    />\n  );\n}\n\n/**\n * Get record of filenames to file contents.\n * @param state Booth state.\n */\nfunction getFileContents(state: State): Record<string, string> {\n  const ret: Record<string, string> = {};\n  if (!state.groups[state.activeGroup]) return ret;\n  const {files} = state.groups[state.activeGroup];\n  for (const file of files) {\n    ret[file.filename] = file.view.state.doc.toString();\n  }\n  return ret;\n}\n","import {useMemo, useRef} from \"react\";\nimport {clamp} from \"@liqvid/utils/misc\";\nimport {onDrag} from \"@liqvid/utils/react\";\nimport \"./Popup.css\";\n\ntype DragDir = \"s\" | \"e\" | \"se\";\n\nexport function Popup(props: {\n  children?: React.ReactNode;\n\n  title?: string;\n}) {\n  const dragDir = useRef<DragDir>();\n  const ref = useRef<HTMLElement>();\n  const offset = useRef({x: 0, y: 0});\n\n  const dragEvents = useMemo(\n    () =>\n      onDrag(\n        (e, hit) => {\n          // prevent from dragging off the page\n          const left =\n            clamp(\n              0,\n              hit.x - offset.current.x,\n              window.innerWidth - ref.current.offsetWidth\n            ) / window.innerWidth;\n\n          const top =\n            clamp(\n              0,\n              hit.y - offset.current.y,\n              window.innerHeight - ref.current.offsetHeight\n            ) / window.innerHeight;\n\n          Object.assign(ref.current.style, {\n            left: `${left * 100}%`,\n            top: `${top * 100}%`\n          });\n        },\n        // down\n        (e, hit) => {\n          e.preventDefault();\n          const dims = ref.current.getBoundingClientRect();\n          offset.current.x = hit.x - dims.left;\n          offset.current.y = hit.y - dims.top;\n\n          document.body.classList.add(\"dragging\");\n        },\n        () => document.body.classList.remove(\"dragging\")\n      ),\n    []\n  );\n\n  const resizeEvents = useMemo(\n    () =>\n      onDrag(\n        (e, {dx, dy}) => {\n          e.preventDefault();\n          const rect = ref.current.getBoundingClientRect();\n\n          let {height, width} = rect;\n\n          // console.log(dx, width);\n\n          if (dragDir.current.includes(\"e\")) width += dx;\n          if (dragDir.current.includes(\"s\")) height += dy;\n\n          Object.assign(ref.current.style, {\n            height: `${height}px`,\n            width: `${width}px`\n          });\n        },\n        (e) => {\n          dragDir.current = (e.target as HTMLDivElement).className.match(\n            /ui-resizable-([se]+)/\n          )[1] as DragDir;\n          \n          document.body.classList.add(\"resizing\");\n        },\n        () => document.body.classList.remove(\"resizing\")\n      ),\n    []\n  );\n\n  return (\n    <aside className=\"popup\" ref={ref}>\n      {props.title && (\n        <header className=\"draggable\" {...dragEvents}>\n          {props.title}\n        </header>\n      )}\n      <div className=\"ui-resizable-handle ui-resizable-e\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-s\" {...resizeEvents} />\n      <div className=\"ui-resizable-handle ui-resizable-se\" {...resizeEvents} />\n      <div className=\"popup-content\">{props.children}</div>\n    </aside>\n  );\n}\n","function templateString(strings, ...keys) {\n  return (...values: string[]): string => {\n    const result = [strings[0]];\n    keys.forEach((key, i) => {\n      result.push(values[key], strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}\n\nexport const file = `function Component() {\n  return <h1>Hello World!</h1>;\n}\n`;\n\nexport const tsxTemplate = templateString`const {createRoot} = ReactDOM;\n\n${0}\n\ncreateRoot(document.querySelector(\"main\")).render(<Component />)`;\n\nexport const htmlTemplate = templateString`<html>\n<body>\n  <main></main>\n  \n  <script crossorigin defer src=\"https://unpkg.com/react@18.2.0/umd/react.production.min.js\"></script>\n  <script crossorigin defer src=\"https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js\"></script>\n  <script defer>window.addEventListener(\"DOMContentLoaded\", () => {${0}});</script>\n</body>\n</html>`;\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Audio","props","audio","useRef","playback","useME","useEffect","play","current","pause","syncTime","currentTime","addEventListener","removeEventListener","ref","ScrubberBar","input","forceUpdate","useForceUpdate","onChange","useCallback","parseFloat","currentTarget","value","toggleFullscreen","document","fullscreenElement","exitFullscreen","body","requestFullscreen","useMemo","bind","title","onClick","type","min","max","duration","step","unFullscreenIcon","fullscreenIcon","viewBox","fill","d","tl","gsap","paused","recordingData","fetch","then","res","json","extensions","basicSetup","javascript","jsx","typescript","syntaxHighlighting","classHighlighter","className","timeline","Content","src","from","to","EditorGroup","EditorPanel","filename","Replay","content","file","replay","Editor","Resize","Popup","Preview","Console","store","useBoothStore","iframe","render","files","state","ret","groups","activeGroup","view","doc","toString","getFileContents","getState","tsx","tsxTemplate","Babel","plugins","presets","console","log","srcdoc","htmlTemplate","subscribe","run","sandbox","dragDir","offset","x","y","dragEvents","onDrag","hit","left","clamp","window","innerWidth","offsetWidth","top","innerHeight","offsetHeight","Object","assign","style","preventDefault","dims","getBoundingClientRect","classList","add","remove","resizeEvents","dx","dy","rect","height","width","includes","target","match","children","templateString","strings","values","result","forEach","key","i","push","join"],"sourceRoot":""}