{"version":3,"file":"static/js/272.fd69685f.chunk.js","mappings":"+VAOMA,EAAW,SAACC,GAAD,YAAW,CACxBA,EAAMC,YADkB,UAExBD,EAAME,OAAOF,EAAMC,oBAFK,aAExB,EAAiCE,WAFpB,EAOV,SAASC,IACZ,IAAMC,GAAQC,EAAAA,EAAAA,MACd,GAAsCC,EAAAA,EAAAA,IAASF,EAAON,GAAtD,eAAOE,EAAP,KAAoBO,EAApB,KACMC,EAAQJ,EAAMK,WAAWR,OAAOD,GAC9BU,EAAaN,EAAMK,WAAnBC,SACFC,GAASC,EAAAA,EAAAA,cAAY,SAACC,GAAa,UAErC,OAAIH,QAAJ,IAAIA,GAAJ,UAAIA,EAAUI,eAAd,OAAI,EAAmBC,QACnBL,EAASM,aAAQC,EAAWC,EAAAA,GAAYL,GAG5CT,EAAMe,UAAS,SAACpB,GAAD,MAAY,CACvBE,QAAQ,kBACDF,EAAME,QADP,cAEDF,EAAMC,aAFL,kBAGKD,EAAME,OAAOF,EAAMC,cAHxB,IAIEE,WAAYW,MALT,IAUf,IAAMd,EAAQK,EAAMK,WACdW,EAAI,UAAGrB,EAAME,OAAOF,EAAMC,oBAAtB,iBAAG,EAAiCqB,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEV,WAAaA,CAAtB,WAA/C,aAAG,EAA6EO,KACtFA,GAEAI,YAAW,kBAAMJ,EAAKK,OAAX,GAElB,GAAE,CAACf,IACEgB,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,SAACC,GAClClB,EAAOkB,EAAEC,cAAcC,YAAYC,OACtC,GAFsB,GAEnB,CAACrB,IA6BL,OA3BAsB,EAAAA,EAAAA,YAAU,WAGN,IADA,IAAMC,EAAkB,CAAC,EAFb,WAGHC,GACLD,EAAgB,OAAD,OAAQC,IAAO,CAC1BC,IAAK,OAAF,OAASD,GACZE,IAAK,WACD,IAAMtC,EAAQK,EAAMK,WACdD,EAAQT,EAAME,OAAOF,EAAMC,aACjC,QAAIQ,EAAMa,MAAMiB,OAASH,KAEzBxB,EAAOH,EAAMa,MAAMc,EAAI,GAAGtB,WACnB,EACV,EAbG,EAGHsB,EAAI,EAAGA,GAAK,IAAKA,EAAG,EAApBA,GAcT/B,EAAMe,UAAS,SAACoB,GAAD,MAAW,CAEtBC,WAAYD,EAAKC,WAAWC,OAAO,aAEnCC,WAAW,kBACJH,EAAKG,WACLR,GANI,GASlB,GAAE,IACE1B,GAEGmC,EAAAA,EAAAA,KAAK,MAAO,CAAEC,UAAW,gBAAiBC,KAAM,UAAWC,SAAUtC,EAAMa,MAAM0B,KAAI,gBAAGlC,EAAH,EAAGA,SAAH,OAAmB8B,EAAAA,EAAAA,KAAK,UAAD,QAAC,QAAYC,UAAW,gBAAF,OAAkBI,EAAYnC,IAAaoC,GAAIC,EAAAA,EAAAA,QAAY,CAAErC,SAAAA,EAAUL,MAAOR,IAAgB,gBAAiBkD,EAAAA,EAAAA,YAAgB,CAAErC,SAAAA,EAAUL,MAAOR,IAAgB,gBAAiBO,IAAmBM,EAAUgC,KAAM,OAAUnB,GAAtP,IAA8PoB,SAAUjC,IAAYA,EAA3S,MADlF,IAEd,CAMD,SAASmC,EAAYnC,GACjB,OAAOA,EAASsC,MAAMtC,EAASuC,YAAY,KAAO,EACrD,C,gECnFKC,EAASC,OAAOC,IAAI,eACpBF,KAAUG,aACZA,WAAWH,IAAUI,EAAAA,EAAAA,eAAc,OAKhC,IAAMC,EAAgBF,WAAWH,G,0BCPlCM,EAAc,CAChBC,QAAS,OACTC,IAAK,MACLC,MAAO,QACPC,KAAM,QAEJC,EAAY,CAAC,E,UCPU,CACzB,WACA,WACA,SACA,UACA,aACA,aACA,YACA,YACA,aACA,UACA,WACA,SACA,QACA,WACA,QACA,cACA,SACA,UACA,iBACA,eACA,SACA,WACA,cACA,SACA,gBACA,YACA,YACA,aACA,YACA,YACA,gBACA,aACA,gBACA,aACA,oBACA,kBACA,aACA,YACA,YACA,mBACA,WACA,YACA,gBACA,YACA,cACA,UACA,SACA,SACA,cACA,mBACA,aACA,YACA,cACA,YACA,mBACA,aACA,YACA,iBACA,cACA,cACA,YACA,iBACA,qBACA,mBACA,oBACA,gBACA,qBACA,uBACA,mBACA,cACA,kBACA,iBACA,wBACA,kBACA,gBACA,kBACA,kBACA,gBACA,mBACA,uBACA,uBACA,qBACA,KACA,iBACA,qBACA,4BACA,0BACA,iBACA,gBACA,UACA,iBACA,YACA,gBACA,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","sources":["../node_modules/@lqv/codebooth/dist/esm/components/FileTabs.mjs","../node_modules/@liqvid/keymap/dist/esm/react.mjs","../node_modules/@liqvid/keymap/dist/esm/index.mjs","../node_modules/@liqvid/keymap/dist/esm/mixedCaseVals.mjs","../node_modules/@lqv/codemirror/dist/esm/extensions.mjs","../node_modules/@lqv/codebooth/dist/esm/components/Record.mjs","../node_modules/@liqvid/utils/dist/esm/replay-data.mjs","@development/Record.tsx","@development/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { onClick } from \"@liqvid/utils/react\";\nimport { selectCmd } from \"@lqv/codemirror\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useStore } from \"zustand\";\nimport { useBoothStore } from \"../store.mjs\";\nimport { ids } from \"../utils.mjs\";\nconst selector = (state) => [\n    state.activeGroup,\n    state.groups[state.activeGroup]?.activeFile,\n];\n/**\n * File selector component.\n */\nexport function FileTabs() {\n    const store = useBoothStore();\n    const [activeGroup, activeFilename] = useStore(store, selector);\n    const group = store.getState().groups[activeGroup];\n    const { recorder } = store.getState();\n    const select = useCallback((filename) => {\n        // record event\n        if (recorder?.manager?.active) {\n            recorder.capture(undefined, selectCmd + filename);\n        }\n        // set state\n        store.setState((state) => ({\n            groups: {\n                ...state.groups,\n                [state.activeGroup]: {\n                    ...state.groups[state.activeGroup],\n                    activeFile: filename,\n                },\n            },\n        }));\n        // focus editor\n        const state = store.getState();\n        const view = state.groups[state.activeGroup]?.files.find((_) => _.filename === filename)?.view;\n        if (view) {\n            // XXX yikes\n            setTimeout(() => view.focus());\n        }\n    }, [recorder]);\n    const events = useMemo(() => onClick((e) => {\n        select(e.currentTarget.textContent.trim());\n    }), [select]);\n    // set class\n    useEffect(() => {\n        // keyboard shortcuts\n        const selectShortcuts = {};\n        for (let i = 1; i <= 9; ++i) {\n            selectShortcuts[`Mod-${i}`] = {\n                key: `Mod-${i}`,\n                run: () => {\n                    const state = store.getState();\n                    const group = state.groups[state.activeGroup];\n                    if (group.files.length < i)\n                        return false;\n                    select(group.files[i - 1].filename);\n                    return true;\n                },\n            };\n        }\n        // set class\n        store.setState((prev) => ({\n            // set class\n            classNames: prev.classNames.concat(\"multifile\"),\n            // shortcuts\n            shortcuts: {\n                ...prev.shortcuts,\n                ...selectShortcuts,\n            },\n        }));\n    }, []);\n    if (!group)\n        return null;\n    return (_jsx(\"div\", { className: \"lqv-file-tabs\", role: \"tablist\", children: group.files.map(({ filename }) => (_jsx(\"button\", { className: `lqv-filetype-${getFileType(filename)}`, id: ids.fileTab({ filename, group: activeGroup }), \"aria-controls\": ids.editorPanel({ filename, group: activeGroup }), \"aria-selected\": activeFilename === filename, role: \"tab\", ...events, children: filename }, filename))) }));\n}\n/**\n * Get file extension.\n * @param filename Name of file.\n * @returns File extension.\n */\nfunction getFileType(filename) {\n    return filename.slice(filename.lastIndexOf(\".\") + 1);\n}\n","import { createContext, useContext } from \"react\";\nconst symbol = Symbol.for(\"@lqv/keymap\");\nif (!(symbol in globalThis)) {\n    globalThis[symbol] = createContext(null);\n}\n/**\n * {@link React.Context} used to access ambient Keymap\n */\nexport const KeymapContext = globalThis[symbol];\n/** Access the ambient {@link Keymap} */\nexport function useKeymap() {\n    return useContext(KeymapContext);\n}\n","import { mixedCaseVals } from \"./mixedCaseVals.mjs\";\nconst modifierMap = {\n    Control: \"Ctrl\",\n    Alt: \"Alt\",\n    Shift: \"Shift\",\n    Meta: \"Meta\"\n};\nconst mixedCase = {};\nfor (const key of mixedCaseVals) {\n    mixedCase[key.toLowerCase()] = key;\n}\nconst modifierOrder = Object.keys(modifierMap).map(k => modifierMap[k]);\nconst useCode = [\n    \"Backspace\",\n    \"Enter\",\n    \"Space\",\n    \"Tab\"\n];\n/** Maps keyboard shortcuts to actions */\nexport class Keymap {\n    constructor() {\n        this.__bindings = {};\n    }\n    /** Given a KeyboardEvent, returns a shortcut sequence matching that event. */\n    static identify(e) {\n        const parts = [];\n        for (const modifier in modifierMap) {\n            if (e.getModifierState(modifier)) {\n                parts.push(modifierMap[modifier]);\n            }\n        }\n        if (e.key in modifierMap) {\n        }\n        else if (e.code.startsWith(\"Digit\")) {\n            parts.push(e.code.slice(5));\n        }\n        else if (e.code.startsWith(\"Key\")) {\n            parts.push(e.code.slice(3));\n        }\n        else if (useCode.includes(e.code)) {\n            parts.push(e.code);\n        }\n        else {\n            parts.push(e.key);\n        }\n        return parts.join(\"+\");\n    }\n    /** Returns a canonical form of the shortcut sequence. */\n    static normalize(seq) {\n        return seq.split(\"+\").map(str => {\n            const lower = str.toLowerCase();\n            if (str === \"\")\n                return \"\";\n            if (mixedCase[lower]) {\n                return mixedCase[lower];\n            }\n            return str[0].toUpperCase() + lower.slice(1);\n        }).sort((a, b) => {\n            if (modifierOrder.includes(a)) {\n                if (modifierOrder.includes(b)) {\n                    return modifierOrder.indexOf(a) - modifierOrder.indexOf(b);\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (modifierOrder.includes(b)) {\n                return 1;\n            }\n            else {\n                return cmp(a, b);\n            }\n        }).join(\"+\");\n    }\n    /**\n     * Bind a handler to be called when the shortcut sequence is pressed.\n     * @param seq Shortcut sequence\n     * @param cb Callback function\n     */\n    bind(seq, cb) {\n        if (seq.indexOf(\",\") > -1) {\n            for (const atomic of seq.split(\",\")) {\n                this.bind(atomic, cb);\n            }\n            return;\n        }\n        seq = Keymap.normalize(seq);\n        if (!this.__bindings.hasOwnProperty(seq)) {\n            this.__bindings[seq] = [];\n        }\n        this.__bindings[seq].push(cb);\n    }\n    /**\n     * Unbind a handler from a shortcut sequence.\n     * @param seq Shortcut sequence\n     * @param cb Handler to unbind\n     */\n    unbind(seq, cb) {\n        if (seq.indexOf(\",\") > -1) {\n            for (const atomic of seq.split(\",\")) {\n                this.unbind(atomic, cb);\n            }\n            return;\n        }\n        seq = Keymap.normalize(seq);\n        if (!this.__bindings.hasOwnProperty(seq))\n            throw new Error(`${seq} is not bound`);\n        const index = this.__bindings[seq].indexOf(cb);\n        if (index < 0) {\n            throw new Error(`${seq} is not bound to ${cb.name ?? \"callback\"}`);\n        }\n        this.__bindings[seq].splice(index, 1);\n        if (this.__bindings[seq].length === 0) {\n            delete this.__bindings[seq];\n        }\n    }\n    /** Return all shortcut sequences with handlers bound to them. */\n    getKeys() {\n        return Object.keys(this.__bindings);\n    }\n    /** Get the list of handlers for a given shortcut sequence. */\n    getHandlers(seq) {\n        if (!this.__bindings.hasOwnProperty(seq))\n            return [];\n        return this.__bindings[seq].slice();\n    }\n    /** Dispatches all handlers matching the given event. */\n    handle(e) {\n        const seq = Keymap.identify(e);\n        if (!this.__bindings[seq] && !this.__bindings[\"*\"])\n            return;\n        if (this.__bindings[seq]) {\n            e.preventDefault();\n            for (const cb of this.__bindings[seq]) {\n                cb(e);\n            }\n        }\n        if (this.__bindings[\"*\"]) {\n            for (const cb of this.__bindings[\"*\"]) {\n                cb(e);\n            }\n        }\n    }\n}\n/**\n * Returns -1 if a < b, 0 if a === b, and 1 if a > b.\n */\nfunction cmp(a, b) {\n    if (a < b)\n        return -1;\n    else if (a === b)\n        return 0;\n    return 1;\n}\n","export const mixedCaseVals = [\n    \"AltGraph\",\n    \"CapsLock\",\n    \"FnLock\",\n    \"NumLock\",\n    \"ScrollLock\",\n    \"SymbolLock\",\n    \"ArrowDown\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"ArrowUp\",\n    \"PageDown\",\n    \"PageUp\",\n    \"CrSel\",\n    \"EraseEof\",\n    \"ExSel\",\n    \"ContextMenu\",\n    \"ZoomIn\",\n    \"ZoomOut\",\n    \"BrightnessDown\",\n    \"BrightnessUp\",\n    \"LogOff\",\n    \"PowerOff\",\n    \"PrintScreen\",\n    \"WakeUp\",\n    \"AllCandidates\",\n    \"CodeInput\",\n    \"FinalMode\",\n    \"GroupFirst\",\n    \"GroupLast\",\n    \"GroupNext\",\n    \"GroupPrevious\",\n    \"ModeChange\",\n    \"NextCandidate\",\n    \"NonConvert\",\n    \"PreviousCandidate\",\n    \"SingleCandidate\",\n    \"HangulMode\",\n    \"HanjaMode\",\n    \"JunjaMode\",\n    \"HiraganaKatakana\",\n    \"KanaMode\",\n    \"KanjiMode\",\n    \"ZenkakuHanaku\",\n    \"AppSwitch\",\n    \"CameraFocus\",\n    \"EndCall\",\n    \"GoBack\",\n    \"GoHome\",\n    \"HeadsetHook\",\n    \"LastNumberRedial\",\n    \"MannerMode\",\n    \"VoiceDial\",\n    \"ChannelDown\",\n    \"ChannelUp\",\n    \"MediaFastForward\",\n    \"MediaPause\",\n    \"MediaPlay\",\n    \"MediaPlayPause\",\n    \"MediaRecord\",\n    \"MediaRewind\",\n    \"MediaStop\",\n    \"MediaTrackNext\",\n    \"MediaTrackPrevious\",\n    \"AudioBalanceLeft\",\n    \"AudioBalanceRight\",\n    \"AudioBassDown\",\n    \"AudioBassBoostDown\",\n    \"AudioBassBoostToggle\",\n    \"AudioBassBoostUp\",\n    \"AudioBassUp\",\n    \"AudioFaderFront\",\n    \"AudioFaderRear\",\n    \"AudioSurroundModeNext\",\n    \"AudioTrebleDown\",\n    \"AudioTrebleUp\",\n    \"AudioVolumeDown\",\n    \"AudioVolumeMute\",\n    \"AudioVolumeUp\",\n    \"MicrophoneToggle\",\n    \"MicrophoneVolumeDown\",\n    \"MicrophoneVolumeMute\",\n    \"MicrophoneVolumeUp\",\n    \"TV\",\n    \"TVAntennaCable\",\n    \"TVAudioDescription\",\n    \"TVAudioDescriptionMixDown\",\n    \"TVAudioDescriptionMixUp\",\n    \"TVContentsMenu\",\n    \"TVDataService\",\n    \"TVInput\",\n    \"TVMediaContext\",\n    \"TVNetwork\",\n    \"TVNumberEntry\",\n    \"TVPower\",\n    \"TVRadioService\",\n    \"TVSatellite\",\n    \"TVSatelliteBS\",\n    \"TVSatelliteCS\",\n    \"TVSatelliteToggle\",\n    \"TVTerrestrialAnalog\",\n    \"TVTerrestrialDigital\",\n    \"TVTimer\",\n    \"AVRInput\",\n    \"AVRPower\",\n    \"ClosedCaptionToggle\",\n    \"DisplaySwap\",\n    \"DVR\",\n    \"GuideNextDay\",\n    \"GuidePreviousDay\",\n    \"InstantReplay\",\n    \"ListProgram\",\n    \"LiveContent\",\n    \"MediaApps\",\n    \"MediaAudioTrack\",\n    \"MediaLast\",\n    \"MediaSkipBackward\",\n    \"MediaSkipForward\",\n    \"MediaStepBackward\",\n    \"MediaStepForward\",\n    \"MediaTopMenu\",\n    \"NavigateIn\",\n    \"NavigateNext\",\n    \"NavigateOut\",\n    \"NavigatePrevious\",\n    \"NextFavoriteChannel\",\n    \"NextUserProfile\",\n    \"OnDemand\",\n    \"PinPDown\",\n    \"PinPMove\",\n    \"PinPToggle\",\n    \"PinPUp\",\n    \"PlaySpeedDown\",\n    \"PlaySpeedReset\",\n    \"PlaySpeedUp\",\n    \"RandomToggle\",\n    \"RcLowBattery\",\n    \"RecordSpeedNext\",\n    \"RfBypass\",\n    \"ScanChannelsToggle\",\n    \"ScreenModeNext\",\n    \"SplitScreenToggle\",\n    \"STBInput\",\n    \"STBPower\",\n    \"VideoModeNext\",\n    \"ZoomToggle\",\n    \"SpeechCorrectionList\",\n    \"SpeechInputToggle\",\n    \"SpellCheck\",\n    \"MailForward\",\n    \"MailReply\",\n    \"MailSend\",\n    \"LaunchCalculator\",\n    \"LaunchCalendar\",\n    \"LaunchContacts\",\n    \"LaunchMail\",\n    \"LaunchMediaPlayer\",\n    \"LaunchMusicPlayer\",\n    \"LaunchMyComputer\",\n    \"LaunchPhone\",\n    \"LaunchScreenSaver\",\n    \"LaunchSpreadsheet\",\n    \"LaunchWebBrowser\",\n    \"LaunchWebCam\",\n    \"LaunchWordProcessor\",\n    \"BrowserBack\",\n    \"BrowserFavorites\",\n    \"BrowserForward\",\n    \"BrowserHome\",\n    \"BrowserRefresh\",\n    \"BrowserSearch\",\n    \"BrowserStop\"\n];\n","import { Keymap } from \"@liqvid/keymap\";\n/**\n * Handle key sequences in `seqs` even if key capture is suspended.\n * @param keymap {@link Keymap} to handle key sequences.\n * @param seqs Key sequences to handle.\n */\nexport function passThrough(keymap, seqs = []) {\n    return seqs.map((key) => {\n        const can = cm2lv(key);\n        // argh\n        const fake = new KeyboardEvent(\"keydown\");\n        return {\n            key,\n            run: () => {\n                const handlers = keymap.getHandlers(can);\n                for (const cb of handlers) {\n                    cb(fake);\n                }\n                return false;\n            },\n        };\n    });\n}\n/**\n * Convert CodeMirror key sequences to Liqvid format.\n */\nconst mac = navigator.platform === \"MacIntel\";\nfunction cm2lv(seq) {\n    seq = seq.replace(\"Mod\", mac ? \"Meta\" : \"Ctrl\");\n    seq = seq.replace(/-/g, \"+\");\n    return Keymap.normalize(seq);\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { keymap } from \"@codemirror/view\";\nimport { useKeymap } from \"@liqvid/keymap/react\";\nimport { selectCmd } from \"@lqv/codemirror\";\nimport { passThrough } from \"@lqv/codemirror/extensions\";\nimport { useEffect, useMemo } from \"react\";\nimport { recording } from \"../extensions.mjs\";\nimport { useBoothStore } from \"../store.mjs\";\nimport { Editor } from \"./Editor.mjs\";\n/** Recording editor. */\nexport const Record = (props) => {\n    const { captureKeys = {\n        \"Mod-Enter\": \"run\",\n        \"Mod-K\": \"clear\",\n        \"Mod-L\": \"clear\",\n    }, extensions = [], group = \"default\", passKeys = [\"Mod-Alt-2\", \"Mod-Alt-3\", \"Mod-Alt-4\"], ...attrs } = props;\n    const store = useBoothStore();\n    const lqvKeymap = useKeymap();\n    const newExtensions = useMemo(() => lqvKeymap\n        ? [keymap.of(passThrough(lqvKeymap, passKeys)), ...extensions]\n        : extensions, [passKeys]);\n    // attach recording extensions --- this has to be done this way because\n    // the `shortcuts` Compartment will abort further handling of the sequence\n    useEffect(() => {\n        const state = store.getState();\n        const { view } = state.groups[group].files.find((file) => file.filename === props.filename);\n        view.dispatch({\n            effects: recording.reconfigure([\n                ...recording.get(view.state),\n                [state.recorder.extension(captureKeys)],\n            ]),\n        });\n        includeFilenameInRecording(state);\n    }, []);\n    return (_jsx(Editor, { content: props.content, extensions: newExtensions, ...attrs }));\n};\n/* NOOOOOOOOOO */\nconst modifiedRecorder = Symbol();\nfunction includeFilenameInRecording(state) {\n    // only do this if we are recording in multiple files\n    let recordingExtensions = 0;\n    outer: {\n        for (const group of Object.values(state.groups)) {\n            for (const { view } of group.files) {\n                const extnState = recording.get(view.state);\n                if (extnState instanceof Array && extnState.length > 0) {\n                    recordingExtensions++;\n                    if (recordingExtensions > 1)\n                        break outer;\n                }\n            }\n        }\n    }\n    if (recordingExtensions < 2) {\n        return;\n    }\n    // be idempotent\n    if (state.recorder[modifiedRecorder]) {\n        return;\n    }\n    // intercept beginRecording\n    const beginRecording = state.recorder.beginRecording.bind(state.recorder);\n    state.recorder.beginRecording = (...args) => {\n        // have to call existing beginRecording() FIRST in order to\n        // set state.recorder.duration, otherwise we get negative times!\n        beginRecording(...args);\n        state.recorder.capture(0, selectCmd + state.getActiveFile().filename);\n    };\n    state.recorder[modifiedRecorder] = true;\n}\n","/**\n * Concatenate several ReplayData together, with delays.\n * @param args [ReplayData, delay] objects to join\n * @returns Concatenated replay data\n */\nexport function concat(...args) {\n    const [head, ...tail] = args;\n    const ret = [...head[0]];\n    let ptr = head[1] + length(head[0]);\n    for (const [data, start] of tail) {\n        const copy = data.slice();\n        copy[0][0] += start - ptr;\n        ret.push(...copy);\n        ptr += length(copy);\n    }\n    return ret;\n}\n/**\n * Get the total duration of replay data.\n * @param data ReplayData item\n * @returns Duration of replay data\n */\nexport function length(data) {\n    return data.map((_) => _[0]).reduce((a, b) => a + b, 0);\n}\n","import \"./Record.css\";\n\nimport {AudioRecorder, RecordingManager} from \"@liqvid/recording\";\nimport {length} from \"@liqvid/utils/replay-data\";\nimport {CodeRecorder} from \"@lqv/codemirror/recording\";\nimport {useCallback, useEffect, useState} from \"react\";\n\ntype CodingData = ReturnType<CodeRecorder[\"finalizeRecording\"]>;\ntype RecordingData = {\n  audio: Blob;\n  coding: CodingData;\n};\n\nconst manager = new RecordingManager();\nconst audioRecorder = new AudioRecorder();\naudioRecorder.requestRecording();\nexport const codeRecorder = new CodeRecorder();\n\nexport function RecordingControl() {\n  const [active, setActive] = useState(false);\n  const [data, setData] = useState<RecordingData>();\n\n  /* prevent CRA reload when recording */\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    const warn = (e: BeforeUnloadEvent) => e.returnValue = \"You have recording data\";\n    window.addEventListener(\"beforeunload\", warn);\n    return () => window.removeEventListener(\"beforeunload\", warn);\n  }, [data]);\n\n  const toggleRecording = useCallback(() => {\n    if (active) {\n      (manager.endRecording() as Promise<RecordingData>).then(\n        (recordingData) => {\n          setData(recordingData);\n        }\n      );\n    } else {\n      manager.beginRecording({\n        audio: audioRecorder,\n        coding: codeRecorder\n      });\n    }\n    setActive(!active);\n  }, [active]);\n\n  return (\n    <div className=\"lqv-recording\">\n      <h2>Recording</h2>\n      <button aria-pressed={active} onClick={toggleRecording}>\n        <svg aria-hidden=\"true\" viewBox=\"-2 -2 4 4\">\n          <circle fill={active ? \"red\" : \"#aaa\"} cx=\"0\" cy=\"0\" r=\"1\" />\n        </svg>\n        Record\n      </button>\n      {data && (\n        <output>\n          <p>\n            Duration: <code>{length(data.coding) / 1000}</code>\n          </p>\n          <p>\n            Save this as <code>public/audio.webm</code>:\n            <a download=\"audio.webm\" href={URL.createObjectURL(data.audio)}>\n              Download Audio\n            </a>\n          </p>\n          <p>\n            Copy this into <code>public/recordings.json</code>:\n          </p>\n          <textarea readOnly value={JSON.stringify(data.coding)} />\n        </output>\n      )}\n    </div>\n  );\n}\n","import \"../codebooth.css\";\nimport \"../style.css\";\nimport \"../syntax.css\";\n\nimport {python} from \"@codemirror/lang-python\";\nimport {syntaxHighlighting} from \"@codemirror/language\";\nimport {classHighlighter} from \"@lezer/highlight\";\nimport {basicSetup, Buttons, Clear, CodeBooth, Console, EditorPanel, FileTabs, Record, Resize, Run} from \"@lqv/codebooth\";\nimport {PythonRun} from \"@lqv/codebooth/python\";\n\nimport {codeRecorder, RecordingControl} from \"./Record\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CodeBooth recorder={codeRecorder}>\n        <section className=\"lqv-sidebar\">\n          <h2>Files</h2>\n          <FileTabs />\n          <h2>Code</h2>\n          <Buttons>\n            <Run />\n            <Clear />\n          </Buttons>\n          <RecordingControl />\n        </section>\n        <EditorPanel filename=\"untitled.py\">\n          <Record\n            extensions={[python(), basicSetup, syntaxHighlighting(classHighlighter)]}\n          />\n        </EditorPanel>\n        <Resize min={.1} max={.3}/>\n        <Resize dir=\"ns\" min={0.04} max={.5}/>\n        <PythonRun />\n        <Console />\n      </CodeBooth>\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["selector","state","activeGroup","groups","activeFile","FileTabs","store","useBoothStore","useStore","activeFilename","group","getState","recorder","select","useCallback","filename","manager","active","capture","undefined","selectCmd","setState","view","files","find","_","setTimeout","focus","events","useMemo","onClick","e","currentTarget","textContent","trim","useEffect","selectShortcuts","i","key","run","length","prev","classNames","concat","shortcuts","_jsx","className","role","children","map","getFileType","id","ids","slice","lastIndexOf","symbol","Symbol","for","globalThis","createContext","KeymapContext","modifierMap","Control","Alt","Shift","Meta","mixedCase","toLowerCase","modifierOrder","Object","keys","k","useCode","Keymap","this","__bindings","seq","cb","indexOf","split","atomic","bind","normalize","hasOwnProperty","push","unbind","Error","index","name","splice","identify","preventDefault","parts","modifier","getModifierState","code","startsWith","includes","join","str","lower","toUpperCase","sort","a","b","cmp","passThrough","keymap","seqs","can","cm2lv","fake","KeyboardEvent","handlers","getHandlers","mac","navigator","platform","replace","Record","props","captureKeys","extensions","passKeys","attrs","lqvKeymap","useContext","newExtensions","file","dispatch","effects","recording","extension","recordingExtensions","outer","values","extnState","Array","modifiedRecorder","beginRecording","getActiveFile","includeFilenameInRecording","Editor","content","data","reduce","RecordingManager","audioRecorder","AudioRecorder","requestRecording","codeRecorder","CodeRecorder","RecordingControl","useState","setActive","setData","warn","returnValue","window","addEventListener","removeEventListener","toggleRecording","endRecording","then","recordingData","audio","coding","viewBox","fill","cx","cy","r","download","href","URL","createObjectURL","readOnly","value","JSON","stringify","EditorPanel","python","basicSetup","syntaxHighlighting","classHighlighter","Resize","min","max","dir","Console"],"sourceRoot":""}