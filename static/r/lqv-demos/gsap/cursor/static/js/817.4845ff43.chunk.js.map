{"version":3,"file":"static/js/817.4845ff43.chunk.js","mappings":"2NASMA,EAAU,IAAIC,EAAAA,GACdC,EAAW,IAAIC,EAAAA,EAEd,SAASC,IACd,OAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,YAAxB,eAAOG,EAAP,KAAaC,EAAb,KAEMC,GAAkBC,EAAAA,EAAAA,cAAY,WAC9BL,EACDN,EAAQY,eAAiDC,MAAK,SAAAC,GAC7DL,EAAQK,EAAcC,OACvB,KAEDb,EAASc,OAASC,SAASC,eAAe,WAC1ClB,EAAQmB,eAAe,CAACJ,OAAQb,KAElCK,GAAWD,EACZ,GAAE,CAACA,IAEEc,EAAQd,EAAS,kBAAoB,gBAE3C,OACE,iBAAKe,UAAU,YAAf,WACE,0BACE,mBAAQ,aAAYD,EAAOE,QAASZ,EAAiBa,MAAOH,EAA5D,UACE,gBAAKI,QAAQ,YAAb,UACE,mBAAQC,KAAMnB,EAAS,MAAQ,OAAQoB,GAAG,IAAIC,GAAG,IAAIC,EAAE,UAH7D,8BAQCpB,IAAQ,iCACP,uCAAa,2BAAOqB,EAAAA,EAAAA,GAAOrB,GAAQ,UACnC,4CAAkB,8CAAlB,QACA,qBAAUsB,UAAQ,EAACC,MAAOC,KAAKC,UAAUzB,UAIhD,CClCD,MATA,WACE,OACE,iBAAKa,UAAU,MAAf,WACE,SAAC,IAAD,KACA,SAACjB,EAAD,MAGL,C,mECXY8B,EAAiD,SAACC,GAAD,OAC5D,iCACE,iBAAMC,GAAG,QAAT,4CACA,iBAAKA,GAAG,UAAR,WACE,iBAAKZ,QAAQ,eAAb,WACE,mBAAQE,GAAG,KAAKC,GAAG,IAAIC,EAAE,OAAOH,KAAK,SACrC,mBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAAOH,KAAK,UACtC,mBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,OAAOH,KAAK,WACpC,mBAAQC,GAAG,IAAIC,GAAG,KAAKC,EAAE,OAAOH,KAAK,YACrC,mBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,OAAOH,KAAK,YAErCU,EAAME,cAXiD,C","sources":["@development/Record.tsx","@development/index.js","shared.tsx"],"sourcesContent":["import \"./Record.css\";\n\nimport {RecordingManager} from \"@liqvid/recording\";\nimport {CursorRecorder} from \"@lqv/cursor/recording\";\nimport {useCallback, useState} from \"react\";\nimport {length} from \"@liqvid/utils/replay-data\";\n\ntype CursorData = ReturnType<CursorRecorder[\"finalizeRecording\"]>;\n\nconst manager = new RecordingManager();\nconst recorder = new CursorRecorder();\n\nexport function RecordingControl() {\n  const [active, setActive] = useState(false);\n  const [data, setData] = useState<CursorData>();\n\n  const toggleRecording = useCallback(() => {\n    if (active) {\n      (manager.endRecording() as Promise<{cursor: CursorData}>).then(recordingData => {\n        setData(recordingData.cursor);\n      });\n    } else {\n      recorder.target = document.getElementById(\"targets\")!;\n      manager.beginRecording({cursor: recorder} as any);\n    }\n    setActive(!active);\n  }, [active]);\n\n  const label = active ? \"Begin recording\" : \"End recording\";\n\n  return (\n    <div className=\"recording\">\n      <p>\n        <button aria-label={label} onClick={toggleRecording} title={label}>\n          <svg viewBox=\"-2 -2 4 4\">\n            <circle fill={active ? \"red\" : \"#aaa\"} cx=\"0\" cy=\"0\" r=\"1\" />\n          </svg>\n        </button>\n        Press to start recording\n      </p>\n      {data && <>\n        <p>Duration: <code>{length(data) / 1000}</code></p>\n        <p>Copy this into <code>recordings.json</code>:</p>\n        <textarea readOnly value={JSON.stringify(data)} />\n      </>}\n    </div>\n  );\n}\n","import \"../App.css\";\nimport {Targets} from \"../shared\";\nimport {RecordingControl} from \"./Record\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Targets/>\n      <RecordingControl />\n    </div>\n  );\n}\n\nexport default App;\n","export const Targets: React.FC<React.PropsWithChildren<{}>> = (props) =>\n  <>\n    <span id=\"watch\">Look, you can point at things</span>\n    <div id=\"targets\">\n      <svg viewBox=\"-5 -2.5 10 5\">\n        <circle cx=\"-4\" cy=\"2\" r=\"0.03\" fill=\"red\" />\n        <circle cx=\"-2\" cy=\"-2\" r=\"0.03\" fill=\"blue\" />\n        <circle cx=\"0\" cy=\"2\" r=\"0.03\" fill=\"green\" />\n        <circle cx=\"2\" cy=\"-2\" r=\"0.03\" fill=\"purple\" />\n        <circle cx=\"4\" cy=\"2\" r=\"0.03\" fill=\"pink\" />\n      </svg>\n      {props.children}\n    </div>\n  </>;\n"],"names":["manager","RecordingManager","recorder","CursorRecorder","RecordingControl","useState","active","setActive","data","setData","toggleRecording","useCallback","endRecording","then","recordingData","cursor","target","document","getElementById","beginRecording","label","className","onClick","title","viewBox","fill","cx","cy","r","length","readOnly","value","JSON","stringify","Targets","props","id","children"],"sourceRoot":""}